{"version":3,"sources":["components/Home.js","components/Contact.js","components/CustomNavbar.js","App.js","serviceWorker.js","index.js"],"names":["webList","name","url","desc","busList","Home","props","list","map","value","index","key","href","Container","fluid","Row","className","Col","xs","md","Image","src","roundedCircle","sm","this","makeList","Component","complements","CustomNavbar","alert","Math","floor","random","length","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Button","onClick","makeComplement","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uXAIMA,G,MAAQ,CAAC,CAACC,KAAM,OAAQC,IAAI,qCAAsCC,KAAM,gDAC9E,CAACF,KAAM,QAASC,IAAI,6BAA8BC,KAAM,iDACxD,CAACF,KAAM,iBAAkBC,IAAI,8CAA+CC,KAAM,2CAE5EC,EAAQ,CAAC,CAACH,KAAM,yBAA0BC,IAAI,yEAA0EC,KAAM,IACpI,CAACF,KAAM,0BAA2BC,IAAI,yEAA0EC,KAAM,IACtH,CAACF,KAAM,kCAAmCC,IAAI,yEAA0EC,KAAM,KAGzGE,E,YAIjB,WAAYC,GAAO,qEACTA,I,sEAGDC,GAEL,OACI,4BACKA,EAAKC,KAAI,SAACC,EAAOC,GACd,OAAO,wBAAIC,IAAKD,GAAO,uBAAGE,KAAMH,EAAMP,KAAMO,EAAMR,MAAUQ,EAAMN,Y,+BAU9E,OACI,kBAACU,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,CAAKC,UAAW,YACZ,kBAACC,EAAA,EAAD,CAAKD,UAAU,WAAWE,GAAM,GAAIC,GAAI,GAEpC,yBAAKH,UAAW,+BACZ,0CACA,mDACA,yFAGR,kBAACC,EAAA,EAAD,CAAKD,UAAU,YAAYE,GAAI,EAAGC,GAAI,IAGtC,kBAACF,EAAA,EAAD,CAAKD,UAAU,YAAYE,GAAI,EAAGC,GAAI,GAClC,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAqBC,eAAe,EAAMR,OAAK,MAGlE,kBAACC,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,CAAWC,OAAQ,GACf,kBAACG,EAAA,EAAD,CAAKC,GAAK,GAAIK,GAAM,IAChB,wCACA,qbACA,uBAAGX,KAAO,0EAAV,uBAKZ,kBAACG,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,CAAWG,UAAU,YAIzB,kBAACD,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,CAAWG,UAAU,aACjB,2CACA,wCACCQ,KAAKC,SAASzB,GAEf,uEACCwB,KAAKC,SAASrB,U,GA/DLsB,a,GCXGA,Y,uBCE/BC,G,MAAY,CAAC,mBAAoB,2BAA4B,oBAAqB,uBACxF,2CAAuC,mCAElBC,E,yLAKbC,MAAMF,EAAYG,KAAKC,MAAMD,KAAKE,UAAUL,EAAYM,OAAO,GAAG,O,+BAG5D,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,MAErB,kBAACF,EAAA,EAAOG,MAAR,CAAczB,KAAK,KACf,yBAAKI,UAAU,aAAf,oBAEJ,kBAACkB,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAE7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAI,EAAKC,mBAA1B,4B,GApBkBnB,aCc3BoB,MAZf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,cAChB,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAW9C,OCFvB+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c0e9100f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {Jumbotron, Container, Row, Col, Image, Button, Card} from 'react-bootstrap'\nimport './Home.css'\nconst webList=[{name: \"WH3N\", url:\"https://wh3nfrontend.herokuapp.com\", desc: \", a mobile-friendly way to organize meetings\"},\n{name: \"Nobee\", url:\"https://www.rentnobee.com/\", desc: \", an easier way to find apartments in Waltham\"},\n{name: \"Slippery Melon\", url:\"https://imapopanyway.itch.io/slippery-melon\", desc: \", a short game, if you can beat it :)\"}\n]\nconst busList=[{name: \"NRG Marketing Strategy\", url:\"https://drive.google.com/file/d/1WhOo_pWgJ7RCqARoTyJTbz9JvIs7Z1Yx/view\", desc: \"\"},\n{name: \"Boeing Case Competition\", url:\"https://drive.google.com/file/d/151Bm_cB6hmy8T3HbvG5_sKMYzNALncpZ/view\", desc: \"\"},\n{name: \"Xiaomi's Feature Phone in India\", url:\"https://drive.google.com/file/d/1v9Z-ykPJeEeWVkC4rcZUM-BzM0cRsUsG/view\", desc: \"\"}\n]\n\nexport default class Home extends Component {\n\n    \n\n    constructor(props){\n        super(props)\n    }\n\n    makeList(list){\n\n        return (\n            <ul>\n                {list.map((value, index) => {\n                    return <li key={index}><a href={value.url}>{value.name}</a>{value.desc}</li>\n                })}\n            </ul>\n        );\n\n    }\n\n  \n\n    render() {\n        return (\n            <Container fluid={true}>\n                <Row className= \"splitter\">\n                    <Col className=\"firstCol\" xs = {12} md={6}>\n\n                        <div className= \"col-md-12 align-self-center\">    \n                            <h3>Hello! I'm</h3>\n                            <strong>Vincent Lauffer</strong>\n                            <h4>Product Strategy Advisor / Web App Developer / Designer</h4>\n                        </div>\n                    </Col>\n                    <Col className=\"secondCol\" xs={3} md={1}>\n                        \n                    </Col>\n                    <Col className=\"secondCol\" xs={7} md={4}>\n                        <Image src=\"assets/vincent.jpg\" roundedCircle={true} fluid/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Container fluid ={false}>\n                        <Col xs= {12} sm = {12}>\n                            <h2>About Me</h2>\n                            <p>I want to build the next generation of great products​. I am recent graduate from Brandeis University, who majored in Business and minored in Computer Science. I love building web apps and games, and am actively looking to help out within the software development industry. I also love product strategy and want to make sure that customers get the respect they deserve within a development environment</p>\n                            <a href = \"https://drive.google.com/file/d/1FQYBwglDmdV8H1-STwnoHVKAfP70VikO/view\">View Full Resume</a>\n                        </Col>\n                    </Container>\n\n                </Row>\n                <Row>\n                    <Container className=\"spacer\">\n                        \n                    </Container>\n                </Row>\n                <Row>\n                    <Container className=\"portfolio\">\n                        <h2> Portfolio </h2>\n                        <h3>Web Apps</h3>\n                        {this.makeList(webList)}\n\n                        <h3>Product Strategy and Marketing Analysis</h3>\n                        {this.makeList(busList)}\n\n                    </Container>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div>\n                contact\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Navbar, Nav, NavItem, Button, Alert} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport './CustomNavbar.css'\nconst complements=[\"You smell great!\", \"I am really proud of you\", \"I love your smile\", \"You look great today\",\n\"You’re like sunshine on a rainy day\", \"Where is the nearest Chipotle?\"];\n\nexport default class CustomNavbar extends Component {\n\n\n    makeComplement(){\n\n        alert(complements[Math.floor(Math.random()*(complements.length-0)+0)]);\n    }\n\n    render() {\n        return ( \n            <Navbar bg=\"dark\" expand=\"sm\">\n                \n                <Navbar.Brand href=\"/\">\n                    <div className=\"brandName\">Vincent Lauffer</div>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            \n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav>\n                        \n                        <Button onClick={()=>this.makeComplement()}>Complement Button</Button>\n                        \n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            \n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Home from './components/Home';\nimport Contact from './components/Contact';\nimport Navbar from './components/CustomNavbar';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Navbar />\n        <Route exact path = \"/\" component={Home} />\n        {/* <Route path =\"/contact\" component={Contact}/> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}