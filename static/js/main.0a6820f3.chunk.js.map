{"version":3,"sources":["components/Project.js","components/Home.js","components/CustomNavbar.js","App.js","serviceWorker.js","index.js"],"names":["Project","props","shadow","style","maxWidth","minHeight","margin","marginTop","expand","color","background","location","img","backgroundSize","width","name","desc","webList","url","busList","Home","list","map","value","index","Col","xs","sm","md","className","href","Container","fluid","Row","Delay","ms","Image","src","roundedCircle","this","makeList","Component","complements","CustomNavbar","alert","Math","floor","random","length","Navbar","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","Button","onClick","makeComplement","variant","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a6820f3.chunk.js","sourcesContent":["import React from 'react'\nimport {Card, CardTitle, CardText} from 'react-mdl';\nimport './Project.css';\nexport default function Project(props) {\n\n    function pictureLocator(location){\n        var str = 'url('+location+')  center 50% no-repeat #D8D8D8';\n        return str;\n    }\n    \n    return (\n        <>\n            <Card shadow={5} style={{maxWidth:'100%',minHeight: '200px', margin: 'auto', marginTop: '15px'}}>\n                <CardTitle expand style={{color: 'red', background: pictureLocator(props.img), backgroundSize: '100%'}}></CardTitle>\n                <CardText style={{width:\"100%\"}}>\n                    {props.name}{props.desc}\n                </CardText>\n                \n            </Card>\n        </>\n    );\n    \n}\n","import React, { Component } from 'react';\n\nimport { Container, Row, Col, Image} from 'react-bootstrap'\nimport './Home.css';\nimport Typing from 'react-typing-animation';\nimport Project from \"./Project\";\n\n\n\n\nconst webList=[{name: \"WH3N\", url:\"https://wh3nfrontend.herokuapp.com\", img: \"assets/wh3npic.jpg\", desc: \": a mobile-friendly solution for organizing meetings\"},\n{name: \"Nobee\", url:\"https://www.rentnobee.com/\", img: \"assets/house.png\", desc: \": an easier way to find apartments in Waltham\"},\n{name: \"Slippery Melon\", url:\"https://imapopanyway.itch.io/slippery-melon\", img: \"assets/Melon2.png\", desc: \": a short game, if you can beat it :)\"}\n]\nconst busList=[{name: \"NRG Marketing Strategy\", url:\"https://drive.google.com/file/d/1WhOo_pWgJ7RCqARoTyJTbz9JvIs7Z1Yx/view\", img: \"assets/nrg.png\", desc: \"\"},\n{name: \"Boeing Case Competition\", url:\"https://drive.google.com/file/d/151Bm_cB6hmy8T3HbvG5_sKMYzNALncpZ/view\",  img: \"assets/boeing.png\", desc: \"\"},\n{name: \"Xiaomi's Feature Phone in India\", url:\"https://drive.google.com/file/d/1v9Z-ykPJeEeWVkC4rcZUM-BzM0cRsUsG/view\",img: \"assets/xmi.png\", desc: \"\"}\n]\n\nexport default class Home extends Component {\n\n    \n\n    \n    makeList(list){\n\n\n        return (\n            <>\n                {list.map((value, index) => {\n                    return <Col key = {index} xs={12} sm={4} md={4}>\n                        <a className = \"imageLink\" href={value.url}>\n                            <Project img = {value.img}\n                                name = {value.name}\n                                desc = {value.desc}\n                                \n                            />\n                            {/* <Image src= {value.img} />\n                            <h1><span>{value.name}{value.desc}</span></h1> */}\n                        </a>\n                    </Col>\n                })}\n            </>\n        );\n\n    }\n\n  \n\n    render() {\n        return (\n            <Container fluid={true}>\n                <Row className= \"splitter\">\n                    <Col className=\"firstCol\" xs = {12} md={6}>\n\n                        <div className= \"col-md-12 align-self-center\">  \n                            <Typing>\n                                <h3>Hello! <Typing.Delay ms={800}/>I'm <Typing.Delay ms={500} /></h3>\n                                <strong>Vincent Lauffer</strong>\n                                \n                            </Typing>  \n                            \n                        </div>\n                    </Col>\n                    <Col className=\"secondCol\" xs={2} md={1}>\n                        \n                    </Col>\n                    <Col className=\"secondCol\" xs={8} md={4}>                 \n                        <Image src=\"assets/vincent.jpg\" roundedCircle= {true} />     \n                    </Col>\n                </Row>\n                <Row className=\"aboutRow\">\n                    <Container className = \"aboutContainer\"fluid ={true}>\n                        <Col xs= {12} sm = {12}>\n                            \n                             <h2>Here's what I love:</h2>\n\n                            <br></br>\n                            <br></br>\n                            \n                            <br></br>\n                            <Row className=\"aboutRow2\">\n                                <Col xs= {12} sm= {4}>\n                                \n                                <Image src=\"assets/webdev.png\"   />\n                                <h5> Web App Developement</h5>\n                                <p>Knowledge of React.js, Node.js, PostgreSQL, GitHub and more! </p>\n                                </Col>\n                                <Col xs= {12} sm= {4}>\n                                \n                                <Image src=\"assets/pm.png\" />\n                                <h5> Product Management</h5>\n                                <p>I love building things that make people smile </p>\n                                </Col>\n\n                                <Col xs= {12} sm= {4}>\n                                \n                                <Image src=\"assets/marketing.png\"  />\n                                <h5>Marketing Analytics</h5>\n                                <p>Customer discovery, segmentation and analysis   </p>\n                                </Col>             \n                            </Row>\n                        </Col>\n                    </Container>\n\n                </Row>\n                \n                <Row>\n                    <Container className=\"portfolio\">\n                        \n                    <Col xs= {12} sm = {12}>\n                            \n                        <h2>Web Apps</h2>\n                        <Row className=\"webApps\">\n                            {this.makeList(webList)}  \n                        </Row>\n                        \n                        <h2>Product Strategy and Marketing Analysis</h2>    \n                        <Row>\n                            {this.makeList(busList)}\n                        </Row>\n                    \n                    </Col>\n                    \n                    </Container>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Navbar, Nav,  Button,Image} from 'react-bootstrap'\n\nimport './CustomNavbar.css'\nconst complements=[\"You smell great!\", \"I am really proud of you\", \"I love your smile\", \"You look great today\",\n\"You’re like sunshine on a rainy day\", \"You're wonderful\", \"You're like sunshine on a rainy day\",\"You always know how to find that silver lining\",\n\"You're inspiring\",\"You're a smart cookie\",\"The people you love are lucky to have you in their lives\",\n\"Your hair looks stunning\",\"On a scale from 1 to 10, you're an 11\",\"You're really something special\",\"Where is the nearest Chipotle?\"];\nconst resumeLink = \"https://drive.google.com/file/d/1V0Cai9b6fIcCUtfBNZeKdIuAnAGjG9Z-/view?usp=sharing\";\n\nexport default class CustomNavbar extends Component {\n\n\n    makeComplement(){\n\n        alert(complements[Math.floor(Math.random()*(complements.length-0)+0)]);\n    }\n\n    render() {\n        return ( \n            <Navbar bg=\"dark\" expand=\"sm\">\n                \n                <Navbar.Brand href=\"/\">\n                    <Image src = \"assets/navbaricon.png\" width = {30} />\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            \n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav>\n                        \n                        <Button onClick={()=>this.makeComplement()}>Receive a Compliment</Button>\n                        <Button variant= \"warning\" href={resumeLink}>View Full Resume</Button>\n                        <Button variant= \"primary\" href=\"https://www.linkedin.com/in/vincent-lauffer-391317119/\">Connect on LinkedIn</Button>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            \n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Home from './components/Home';\n\nimport Navbar from './components/CustomNavbar';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Navbar />\n        <Route exact path = \"/\" component={Home} />\n        {/* <Route path =\"/contact\" component={Contact}/> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}